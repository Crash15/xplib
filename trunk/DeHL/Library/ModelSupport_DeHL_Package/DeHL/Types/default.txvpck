<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="nztcnv128bn_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeManagement">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeManagement.tmNone" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeManagement.tmManual" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeManagement.tmCompiler" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeFamily">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfUnknown" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfUnsignedInteger" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfSignedInteger" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfPointer" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfBoolean" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfMethod" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfReal" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfCharacter" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfString" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfDate" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfInterface" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfClass" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfClassReference" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfVariant" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfArray" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeFamily.tfRecord" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeExtension">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTypeExtension.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeExtensionClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeExtender">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TTypeExtender.FExtensions" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTypeExtender.CreateExtensionFor(System.TObject)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTypeExtender.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTypeExtender.Destroy()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTypeExtender.Register&lt;1&gt;(DeHL.Types.TTypeExtensionClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTypeExtender.Unregister&lt;1&gt;()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.IType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.Name()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.Size()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.TypeInfo()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.Management()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.Family()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.RestrictTo(set@DeHL.Types.TTypeFamily)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType.GetExtension(DeHL.Types.TTypeExtender)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.IConvertibleType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.IConvertibleType&lt;1&gt;:DeHL.Types.IType" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IConvertibleType&lt;1&gt;.TryConvertToVariant(T,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IConvertibleType&lt;1&gt;.ConvertToVariant(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IConvertibleType&lt;1&gt;.TryConvertFromVariant(System.Variant,out@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IConvertibleType&lt;1&gt;.ConvertFromVariant(System.Variant)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;:DeHL.Types.IConvertibleType&lt;1&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.AreEqual(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.GetString(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Serialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Serialize(System.string,T,DeHL.Serialization.TSerializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Serialize(T,DeHL.Serialization.TSerializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Deserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Deserialize(System.string,out@T,DeHL.Serialization.TDeserializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.Deserialize(out@T,DeHL.Serialization.TDeserializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.AsComparer()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IType&lt;1&gt;.AsEqualityComparer()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.IClassType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.IClassType&lt;1&gt;:DeHL.Types.IType&lt;1&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.IClassType&lt;1&gt;.SetShouldCleanup(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeClass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Types.TType.FTypeFamily" />
      <reference referencedUin="delphi:l_impl:src:DeHL_Package:DeHL.Types.TType:DeHL.Types.IType" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType.FCustomTypes" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType.FTypeSize" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType.FTypeInfo" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType.FTypeFamily" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.SetTypeInfo(TypInfo.TTypeInfo*,System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.Skippable(Rtti.TRttiField)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.SerProcessFields(DeHL.Types.TType.TSerializationGuts,DeHL.Serialization.TValueInfo,System.NativeUInt,System.Pointer,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.SerProcessStaticArray(DeHL.Types.TType.TSerializationGuts,DeHL.Serialization.TValueInfo,System.Pointer,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.SerProcessStructClass(DeHL.Types.TType.TSerializationGuts,System.Pointer,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.InternalSerialize(DeHL.Serialization.TValueInfo,System.Pointer,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.InternalDeserialize(DeHL.Serialization.TValueInfo,System.Pointer,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.IsClassStructSerializable(Rtti.TRttiType)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.GetParentTypeInfo(TypInfo.TTypeInfo*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateBinaryType(System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateCharType(System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateIntegerType(TypInfo.TOrdType)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateFloatType(TypInfo.TFloatType)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateStringType(TypInfo.TTypeKind)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateClassType()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateVariantType()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateInt64Type(TypInfo.TTypeData*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateDynamicArrayType(System.NativeUInt,TypInfo.TTypeInfo*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateDefault(TypInfo.TTypeInfo*,System.NativeUInt,System.Boolean,DeHL.Types.TTypeClass,DeHL.Types.TTypeClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.CreateCustomType(TypInfo.TTypeInfo*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.Name()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.Size()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.TypeInfo()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.Management()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.Family()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.RestrictTo(set@DeHL.Types.TTypeFamily)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType.GetExtension(DeHL.Types.TTypeExtender)" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TType.TSerializationGuts" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.FCachedStandardInstance" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.FCachedDefaultInstance" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;:DeHL.Types.TType" />
      <reference referencedUin="delphi:l_impl:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;:DeHL.Types.IType&lt;1&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.FCachedDefaultInstance" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.FCachedStandardInstance" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.FCachedDefaultInstanceIntf" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.FCachedStandardInstanceIntf" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.DisposeCachedDefaultInstance()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.CreateDefault(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.InternalSerialize(DeHL.Serialization.TValueInfo,System.Pointer,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.InternalDeserialize(DeHL.Serialization.TValueInfo,System.Pointer,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi::src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IEqualityComparer.Equals" />
      <reference referencedUin="delphi::src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IEqualityComparer.GetHashCode" />
      <reference referencedUin="delphi::src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IComparer.Compare" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.DoSerialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.DoDeserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IEqualityComparerEquals(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IEqualityComparerGetHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IComparerCompare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.AreEqual(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.GetString(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Serialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Serialize(System.string,T,DeHL.Serialization.TSerializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Serialize(T,DeHL.Serialization.TSerializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Deserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Deserialize(System.string,out@T,DeHL.Serialization.TDeserializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Deserialize(out@T,DeHL.Serialization.TDeserializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.TryConvertToVariant(T,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.ConvertToVariant(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.TryConvertFromVariant(System.Variant,out@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.ConvertFromVariant(System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.AsComparer()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.AsEqualityComparer()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Default()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Default(DeHL.Types.TCompareOverride&lt;1&gt;,DeHL.Types.THashOverride&lt;1&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Default(set@DeHL.Types.TTypeFamily)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Default(set@DeHL.Types.TTypeFamily,DeHL.Types.TCompareOverride&lt;1&gt;,DeHL.Types.THashOverride&lt;1&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Standard()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Standard(DeHL.Types.TCompareOverride&lt;1&gt;,DeHL.Types.THashOverride&lt;1&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Standard(set@DeHL.Types.TTypeFamily)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Standard(set@DeHL.Types.TTypeFamily,DeHL.Types.TCompareOverride&lt;1&gt;,DeHL.Types.THashOverride&lt;1&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Register(DeHL.Types.TTypeClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.Unregister()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TType&lt;1&gt;.IsRegistered()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TMagicType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TMagicType&lt;1&gt;:DeHL.Types.TType&lt;1&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMagicType&lt;1&gt;.Management()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TManualType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TManualType&lt;1&gt;:DeHL.Types.TType&lt;1&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TManualType&lt;1&gt;.Management()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.FType" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;:DeHL.Types.TType&lt;1&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.FType" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.DoSerialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.DoDeserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.GetString(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Name()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Size()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.TypeInfo()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Management()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Family()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.TryConvertToVariant(T,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.TryConvertFromVariant(System.Variant,out@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWrapperType&lt;1&gt;.Create(DeHL.Types.IType&lt;1&gt;)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;:DeHL.Types.TWrapperType&lt;1&gt;" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.FComparer" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.FHasher" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.FComparer" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.FHasher" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.Create(DeHL.Types.IType&lt;1&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TComparerWrapperType&lt;1&gt;.Create(DeHL.Types.IType&lt;1&gt;,DeHL.Types.TCompareOverride&lt;1&gt;,DeHL.Types.THashOverride&lt;1&gt;)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TSuppressedWrapperType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TSuppressedWrapperType&lt;1&gt;:DeHL.Types.TWrapperType&lt;1&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TSuppressedWrapperType&lt;1&gt;.FAllowCleanup" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSuppressedWrapperType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSuppressedWrapperType&lt;1&gt;.Management()" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Types.TSuppressedWrapperType&lt;1&gt;.AllowCleanup" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TObjectWrapperType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TObjectWrapperType&lt;1&gt;:DeHL.Types.TSuppressedWrapperType&lt;1&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TObjectWrapperType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TObjectWrapperType&lt;1&gt;.Management()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TMaybeObjectWrapperType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TMaybeObjectWrapperType&lt;1&gt;:DeHL.Types.TSuppressedWrapperType&lt;1&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMaybeObjectWrapperType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMaybeObjectWrapperType&lt;1&gt;.Management()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TByteType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TByteType:DeHL.Types.TType&lt;System.Byte&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.DoSerialize(DeHL.Serialization.TValueInfo,System.Byte,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Byte,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.Compare(System.Byte,System.Byte)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.GenerateHashCode(System.Byte)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.GetString(System.Byte)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.TryConvertToVariant(System.Byte,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.TryConvertFromVariant(System.Variant,out@System.Byte)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TShortIntType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TShortIntType:DeHL.Types.TType&lt;System.Shortint&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.DoSerialize(DeHL.Serialization.TValueInfo,System.Shortint,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Shortint,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.Compare(System.Shortint,System.Shortint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.GenerateHashCode(System.Shortint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.GetString(System.Shortint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.TryConvertToVariant(System.Shortint,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.TryConvertFromVariant(System.Variant,out@System.Shortint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortIntType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TWordType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TWordType:DeHL.Types.TType&lt;System.Word&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.DoSerialize(DeHL.Serialization.TValueInfo,System.Word,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Word,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.Compare(System.Word,System.Word)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.GenerateHashCode(System.Word)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.GetString(System.Word)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.TryConvertToVariant(System.Word,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.TryConvertFromVariant(System.Variant,out@System.Word)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TSmallIntType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TSmallIntType:DeHL.Types.TType&lt;System.Smallint&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.DoSerialize(DeHL.Serialization.TValueInfo,System.Smallint,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Smallint,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.Compare(System.Smallint,System.Smallint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.GenerateHashCode(System.Smallint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.GetString(System.Smallint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.TryConvertToVariant(System.Smallint,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.TryConvertFromVariant(System.Variant,out@System.Smallint)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSmallIntType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TCardinalType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TCardinalType:DeHL.Types.TType&lt;System.Cardinal&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.DoSerialize(DeHL.Serialization.TValueInfo,System.Cardinal,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Cardinal,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.Compare(System.Cardinal,System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.GenerateHashCode(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.GetString(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.TryConvertToVariant(System.Cardinal,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.TryConvertFromVariant(System.Variant,out@System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCardinalType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TIntegerType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TIntegerType:DeHL.Types.TType&lt;System.Integer&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.DoSerialize(DeHL.Serialization.TValueInfo,System.Integer,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Integer,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.Compare(System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.GenerateHashCode(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.GetString(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.TryConvertToVariant(System.Integer,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.TryConvertFromVariant(System.Variant,out@System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TIntegerType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TInt64Type">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TInt64Type:DeHL.Types.TType&lt;System.Int64&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.DoSerialize(DeHL.Serialization.TValueInfo,System.Int64,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Int64,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.Compare(System.Int64,System.Int64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.GenerateHashCode(System.Int64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.GetString(System.Int64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.TryConvertToVariant(System.Int64,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.TryConvertFromVariant(System.Variant,out@System.Int64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInt64Type.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TUInt64Type">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TUInt64Type:DeHL.Types.TType&lt;System.UInt64&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.DoSerialize(DeHL.Serialization.TValueInfo,System.UInt64,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.UInt64,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.Compare(System.UInt64,System.UInt64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.GenerateHashCode(System.UInt64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.GetString(System.UInt64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.TryConvertToVariant(System.UInt64,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.TryConvertFromVariant(System.Variant,out@System.UInt64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUInt64Type.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TPointerType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TPointerType:DeHL.Types.TType&lt;System.Pointer&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TPointerType.FCanBeSerialized" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TPointerType.FCanBeSerializedVerified" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.GetElementType(DeHL.Serialization.IContext,DeHL.Serialization.TValueInfo)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.DoSerialize(DeHL.Serialization.TValueInfo,System.Pointer,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Pointer,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.Compare(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.GenerateHashCode(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.GetString(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.TryConvertToVariant(System.Pointer,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.TryConvertFromVariant(System.Variant,out@System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TPointerType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TAnsiCharType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TAnsiCharType:DeHL.Types.TType&lt;System.AnsiChar&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.DoSerialize(DeHL.Serialization.TValueInfo,System.AnsiChar,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.AnsiChar,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.Compare(System.AnsiChar,System.AnsiChar)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.GenerateHashCode(System.AnsiChar)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.GetString(System.AnsiChar)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.TryConvertToVariant(System.AnsiChar,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.TryConvertFromVariant(System.Variant,out@System.AnsiChar)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiCharType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TWideCharType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TWideCharType:DeHL.Types.TType&lt;System.WideChar&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.DoSerialize(DeHL.Serialization.TValueInfo,System.Char,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Char,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.Compare(System.Char,System.Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.GenerateHashCode(System.Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.GetString(System.Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.TryConvertToVariant(System.Char,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.TryConvertFromVariant(System.Variant,out@System.Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideCharType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TUCS4CharType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TUCS4CharType:DeHL.Types.TType&lt;System.UCS4Char&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.DoSerialize(DeHL.Serialization.TValueInfo,System.UCS4Char,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.UCS4Char,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.Compare(System.UCS4Char,System.UCS4Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.GenerateHashCode(System.UCS4Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.GetString(System.UCS4Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.TryConvertToVariant(System.UCS4Char,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.TryConvertFromVariant(System.Variant,out@System.UCS4Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4CharType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TSingleType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TSingleType:DeHL.Types.TType&lt;System.Single&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.DoSerialize(DeHL.Serialization.TValueInfo,System.Single,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Single,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.Compare(System.Single,System.Single)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.GenerateHashCode(System.Single)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.GetString(System.Single)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.TryConvertToVariant(System.Single,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.TryConvertFromVariant(System.Variant,out@System.Single)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TSingleType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TDoubleType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TDoubleType:DeHL.Types.TType&lt;System.Double&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.DoSerialize(DeHL.Serialization.TValueInfo,System.Double,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Double,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.Compare(System.Double,System.Double)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.GenerateHashCode(System.Double)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.GetString(System.Double)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.TryConvertToVariant(System.Double,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.TryConvertFromVariant(System.Variant,out@System.Double)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDoubleType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TExtendedType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TExtendedType:DeHL.Types.TType&lt;System.Extended&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.DoSerialize(DeHL.Serialization.TValueInfo,System.Extended,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Extended,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.Compare(System.Extended,System.Extended)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.GenerateHashCode(System.Extended)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.GetString(System.Extended)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.TryConvertToVariant(System.Extended,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.TryConvertFromVariant(System.Variant,out@System.Extended)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TExtendedType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TCompType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TCompType:DeHL.Types.TType&lt;System.Comp&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.DoSerialize(DeHL.Serialization.TValueInfo,System.Comp,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Comp,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.Compare(System.Comp,System.Comp)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.GenerateHashCode(System.Comp)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.GetString(System.Comp)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.TryConvertToVariant(System.Comp,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.TryConvertFromVariant(System.Variant,out@System.Comp)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCompType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TCurrencyType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TCurrencyType:DeHL.Types.TType&lt;System.Currency&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.DoSerialize(DeHL.Serialization.TValueInfo,System.Currency,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Currency,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.Compare(System.Currency,System.Currency)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.GenerateHashCode(System.Currency)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.GetString(System.Currency)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.TryConvertToVariant(System.Currency,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.TryConvertFromVariant(System.Variant,out@System.Currency)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TCurrencyType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TShortStringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TShortStringType:DeHL.Types.TType&lt;System.ShortString&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TShortStringType.FCaseInsensitive" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.DoSerialize(DeHL.Serialization.TValueInfo,System.ShortString,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.ShortString,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.Compare(System.ShortString,System.ShortString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.GenerateHashCode(System.ShortString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.GetString(System.ShortString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.TryConvertToVariant(System.ShortString,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.TryConvertFromVariant(System.Variant,out@System.ShortString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TShortStringType.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TAnsiStringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TAnsiStringType:DeHL.Types.TMagicType&lt;System.AnsiString&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TAnsiStringType.FCaseInsensitive" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.DoSerialize(DeHL.Serialization.TValueInfo,System.AnsiString,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.AnsiString,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.Compare(System.AnsiString,System.AnsiString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.GenerateHashCode(System.AnsiString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.GetString(System.AnsiString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.TryConvertToVariant(System.AnsiString,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.TryConvertFromVariant(System.Variant,out@System.AnsiString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TAnsiStringType.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TWideStringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TWideStringType:DeHL.Types.TMagicType&lt;System.WideString&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TWideStringType.FCaseInsensitive" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.DoSerialize(DeHL.Serialization.TValueInfo,System.WideString,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.WideString,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.Compare(System.WideString,System.WideString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.GenerateHashCode(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.GetString(System.WideString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.TryConvertToVariant(System.WideString,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.TryConvertFromVariant(System.Variant,out@System.WideString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWideStringType.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TUnicodeStringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TUnicodeStringType:DeHL.Types.TMagicType&lt;System.UnicodeString&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TUnicodeStringType.FCaseInsensitive" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.DoSerialize(DeHL.Serialization.TValueInfo,System.string,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.string,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.Compare(System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.GenerateHashCode(System.string)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.GetString(System.string)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.TryConvertToVariant(System.string,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.TryConvertFromVariant(System.Variant,out@System.string)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUnicodeStringType.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TUCS4StringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TUCS4StringType:DeHL.Types.TMagicType&lt;System.UCS4String&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TUCS4StringType.FCaseInsensitive" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.DoSerialize(DeHL.Serialization.TValueInfo,System.Cardinal[],DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Cardinal[],DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.Compare(System.Cardinal[],System.Cardinal[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.GenerateHashCode(System.Cardinal[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.GetString(System.Cardinal[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.TryConvertToVariant(System.Cardinal[],out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.TryConvertFromVariant(System.Variant,out@System.Cardinal[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUCS4StringType.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TUTF8StringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TUTF8StringType:DeHL.Types.TMagicType&lt;System.UTF8String&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TUTF8StringType.FCaseInsensitive" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.DoSerialize(DeHL.Serialization.TValueInfo,System.UTF8String,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.UTF8String,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.Compare(System.UTF8String,System.UTF8String)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.GenerateHashCode(System.UTF8String)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.GetString(System.UTF8String)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.TryConvertToVariant(System.UTF8String,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.TryConvertFromVariant(System.Variant,out@System.UTF8String)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TUTF8StringType.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TInterfaceType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TInterfaceType:DeHL.Types.TMagicType&lt;System.IInterface&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInterfaceType.Compare(System.IInterface,System.IInterface)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInterfaceType.GenerateHashCode(System.IInterface)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInterfaceType.GetString(System.IInterface)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TInterfaceType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TMetaclassType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TMetaclassType:DeHL.Types.TType&lt;System.TClass&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMetaclassType.DoSerialize(DeHL.Serialization.TValueInfo,System.TClass,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMetaclassType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.TClass,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMetaclassType.Compare(System.TClass,System.TClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMetaclassType.GenerateHashCode(System.TClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMetaclassType.GetString(System.TClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMetaclassType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;:DeHL.Types.TType&lt;1&gt;" />
      <reference referencedUin="delphi:l_impl:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;:DeHL.Types.IClassType&lt;1&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.FMustKillClass" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.FCanBeSerialized" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.FCanBeSerializedVerified" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.InternalGetInterface(System.TObject,System.TGUID,ref@System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.CheckSerializable(DeHL.Serialization.TValueInfo,DeHL.Serialization.IContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.DoSerialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.DoDeserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.GetString(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.Management()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.SetShouldCleanup(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.Cleanup(ref@T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TClassType&lt;1&gt;.Create(System.Boolean)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TVariantType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TVariantType:DeHL.Types.TMagicType&lt;System.Variant&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TVariantType.Compare(System.Variant,System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TVariantType.GenerateHashCode(System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TVariantType.GetString(System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TVariantType.TryConvertToVariant(System.Variant,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TVariantType.TryConvertFromVariant(System.Variant,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TVariantType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TBinaryType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TBinaryType:DeHL.Types.TType&lt;System.Pointer&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.DoSerialize(DeHL.Serialization.TValueInfo,System.Pointer,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Pointer,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.Compare(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.GenerateHashCode(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.GetString(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBinaryType.Create(System.NativeUInt)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TMethodType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TMethodType:DeHL.Types.TType&lt;DeHL.Types.__TMethod&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMethodType.Compare(DeHL.Types.__TMethod,DeHL.Types.__TMethod)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMethodType.GenerateHashCode(DeHL.Types.__TMethod)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMethodType.GetString(DeHL.Types.__TMethod)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TMethodType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TProcedureType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TProcedureType:DeHL.Types.TType&lt;System.Pointer&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TProcedureType.Compare(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TProcedureType.GenerateHashCode(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TProcedureType.GetString(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TProcedureType.TryConvertToVariant(System.Pointer,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TProcedureType.TryConvertFromVariant(System.Variant,out@System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TProcedureType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;:DeHL.Types.TType&lt;1&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.FIsMagic" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.DoSerialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.DoDeserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.GetString(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.Management()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TArrayType&lt;1&gt;.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;:DeHL.Types.TType&lt;1&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.FIsMagic" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.FCanBeSerialized" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.FCanBeSerializedVerified" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.CheckSerializable(DeHL.Serialization.IContext,DeHL.Serialization.TValueInfo)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.DoSerialize(DeHL.Serialization.TValueInfo,T,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.DoDeserialize(DeHL.Serialization.TValueInfo,out@T,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.Compare(T,T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.GenerateHashCode(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.GetString(T)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.Management()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRecordType&lt;1&gt;.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.__T3BytesRec">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.__T3BytesRec.b1" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.__T3BytesRec.b2" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.__T3BytesRec.b3" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.T3BytesType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.T3BytesType:DeHL.Types.TType&lt;DeHL.Types.__T3BytesRec&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.T3BytesType.Compare(DeHL.Types.__T3BytesRec,DeHL.Types.__T3BytesRec)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.T3BytesType.GenerateHashCode(DeHL.Types.__T3BytesRec)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.T3BytesType.GetString(DeHL.Types.__T3BytesRec)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.T3BytesType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TDynArrayType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TDynArrayType:DeHL.Types.TMagicType&lt;System.TBoundArray&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TDynArrayType.FSizeOfElement" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Types.TDynArrayType.FArrayTypeInfo" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.GetElementType(DeHL.Serialization.IContext,DeHL.Serialization.TValueInfo)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.DoSerialize(DeHL.Serialization.TValueInfo,System.Integer[],DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Integer[],DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.Compare(System.Integer[],System.Integer[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.GenerateHashCode(System.Integer[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.GetString(System.Integer[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.TryConvertToVariant(System.Integer[],out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.TryConvertFromVariant(System.Variant,out@System.Integer[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDynArrayType.Create(System.NativeUInt,TypInfo.TTypeInfo*)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TBooleanType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TBooleanType:DeHL.Types.TType&lt;System.Boolean&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.DoSerialize(DeHL.Serialization.TValueInfo,System.Boolean,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Boolean,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.Compare(System.Boolean,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.GenerateHashCode(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.GetString(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.TryConvertToVariant(System.Boolean,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.TryConvertFromVariant(System.Variant,out@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TBooleanType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TByteBoolType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TByteBoolType:DeHL.Types.TType&lt;System.Boolean&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.DoSerialize(DeHL.Serialization.TValueInfo,System.Boolean,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Boolean,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.Compare(System.Boolean,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.GenerateHashCode(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.GetString(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.TryConvertToVariant(System.Boolean,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.TryConvertFromVariant(System.Variant,out@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TByteBoolType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TWordBoolType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TWordBoolType:DeHL.Types.TType&lt;System.Boolean&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.DoSerialize(DeHL.Serialization.TValueInfo,System.Boolean,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Boolean,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.Compare(System.Boolean,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.GenerateHashCode(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.GetString(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.TryConvertToVariant(System.Boolean,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.TryConvertFromVariant(System.Variant,out@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TWordBoolType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TLongBoolType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TLongBoolType:DeHL.Types.TType&lt;System.Boolean&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.DoSerialize(DeHL.Serialization.TValueInfo,System.Boolean,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.Boolean,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.Compare(System.Boolean,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.GenerateHashCode(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.GetString(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.TryConvertToVariant(System.Boolean,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.TryConvertFromVariant(System.Variant,out@System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TLongBoolType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TDateType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TDateType:DeHL.Types.TType&lt;System.TDate&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.DoSerialize(DeHL.Serialization.TValueInfo,System.TDate,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.TDate,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.Compare(System.TDate,System.TDate)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.GenerateHashCode(System.TDate)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.GetString(System.TDate)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.TryConvertToVariant(System.TDate,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.TryConvertFromVariant(System.Variant,out@System.TDate)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTimeType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TTimeType:DeHL.Types.TType&lt;System.TTime&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.DoSerialize(DeHL.Serialization.TValueInfo,System.TTime,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.TTime,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.Compare(System.TTime,System.TTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.GenerateHashCode(System.TTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.GetString(System.TTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.TryConvertToVariant(System.TTime,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.TryConvertFromVariant(System.Variant,out@System.TTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TTimeType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TDateTimeType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TDateTimeType:DeHL.Types.TType&lt;System.TDateTime&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.DoSerialize(DeHL.Serialization.TValueInfo,System.TDateTime,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.TDateTime,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.Compare(System.TDateTime,System.TDateTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.GenerateHashCode(System.TDateTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.GetString(System.TDateTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.TryConvertToVariant(System.TDateTime,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.TryConvertFromVariant(System.Variant,out@System.TDateTime)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TDateTimeType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TRawByteStringType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Types.TRawByteStringType:DeHL.Types.TMagicType&lt;System.RawByteString&gt;" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRawByteStringType.DoSerialize(DeHL.Serialization.TValueInfo,System.RawByteString,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRawByteStringType.DoDeserialize(DeHL.Serialization.TValueInfo,out@System.RawByteString,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRawByteStringType.Compare(System.RawByteString,System.RawByteString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRawByteStringType.GenerateHashCode(System.RawByteString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRawByteStringType.GetString(System.RawByteString)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.TRawByteStringType.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.@unitclass.BinaryHash(System.Pointer,System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Types.@unitclass.BinaryCompare(System.Pointer,System.Pointer,System.NativeUInt)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TCompareOverride&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.THashOverride&lt;1&gt;">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.__TMethod">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TTypeFamilySet">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TStringType">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TInternalDictionary">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Types.TExtensionDictionary">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>