<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="mdjlnnlunfq_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.TRefCountedObject">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TRefCountedObject.FKeepAliveList" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TRefCountedObject.FInConstruction" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TRefCountedObject.KeepObjectAlive(DeHL.Base.TRefCountedObject)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TRefCountedObject.ReleaseObject(DeHL.Base.TRefCountedObject,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TRefCountedObject.ExtractReference()" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Base.TRefCountedObject.Constructing" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TRefCountedObject.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TRefCountedObject.NewInstance()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TRefCountedObject.AfterConstruction()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.TSingletonObject">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TSingletonObject.QueryInterface(System.TGUID,out@)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TSingletonObject._AddRef()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TSingletonObject._Release()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.TSimpleObject">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TSimpleObject.Create()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.Activator">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.Activator.CreateInstance(System.string)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.Activator.CreateInstance(System.TClass)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.Activator.CreateInstance(TypInfo.TTypeInfo*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.Activator.CreateInstance(Rtti.TRttiInstanceType)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.TCorePointerDictionary">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.FBucketArray" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.FEntryArray" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.FCount" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.FFreeCount" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.FFreeList" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.InitializeInternals(System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Insert(System.Pointer,System.Pointer,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.FindEntry(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Resize()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Hash(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.GetItem(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.SetItem(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Create(System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Destroy()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Clear()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Clear(DeHL.Base.TCorePointerDictionary.Clear.TProc,DeHL.Base.TCorePointerDictionary.Clear.TProc)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Add(System.Pointer,System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Remove(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.ContainsKey(System.Pointer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.TryGetValue(System.Pointer,out@System.Pointer)" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Items[System.Pointer]" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.Count" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.TCorePointerDictionary.TEntry" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Base.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.@unitclass.__Marker" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Base.@unitclass.DefaultArrayLength" />
    </reference>
  </view>
</nodeSet>