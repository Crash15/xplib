<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="00mqw1o3j1i_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmUp" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmDown" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmCeiling" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmFloor" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmHalfUp" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmHalfDown" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmHalfEven" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TRoundingMode.rmNone" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.MinusTen" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Ten" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.MinusOne" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.One" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Zero" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.FVarType" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.FCached_Numbers" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.FFastPower" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create()static" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Destroy()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetMinusOne()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetMinusTen()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetOne()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetTen()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetZero()" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.FData" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetData()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalGetPrecision(DeHL.Math.BigDecimal.BigDecimal.TData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalGetBigIntegerStr(DeHL.Math.BigDecimal.BigDecimal.TData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalGetBigIntegerAbsStr(DeHL.Math.BigDecimal.BigDecimal.TData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.CutAndValidate(System.string,System.Char,ref@System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalTryParse(System.string,out@DeHL.Math.BigDecimal.BigDecimal,System.Char,System.Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalToString(System.Boolean,System.Char)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalDivide(DeHL.Math.BigDecimal.BigDecimal.TData,DeHL.Math.BigDecimal.BigDecimal.TData,System.NativeInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.InternalPow(System.NativeInt,System.Boolean,System.NativeInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.PowerOfTen(System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetPrecision()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetScale()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetIsNegative()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetIsPositive()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetIsZero()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetSign()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(System.Integer,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(System.Cardinal,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(System.Int64,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(System.UInt64,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(DeHL.Math.BigInteger.BigInteger,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(DeHL.Math.BigCardinal.BigCardinal,System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Create(System.Double)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.CompareTo(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.ToDouble()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.ToBigInteger()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Abs()" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.IsZero" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.IsNegative" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.IsPositive" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Precision" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Scale" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Sign" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Divide(DeHL.Math.BigDecimal.BigDecimal,System.NativeInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Divide(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Round(System.NativeUInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Rescale(System.NativeInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.ScaleByPowerOfTen(System.NativeInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Pow(System.NativeInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Pow(System.NativeInt,System.NativeInt,DeHL.Math.BigDecimal.TRoundingMode)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.TryParse(System.string,out@DeHL.Math.BigDecimal.BigDecimal,SysUtils.TFormatSettings)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.TryParse(System.string,out@DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Parse(System.string,SysUtils.TFormatSettings)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Parse(System.string)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.ToString(SysUtils.TFormatSettings,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.ToString(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Add(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Subtract(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Multiply(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Divide(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Negative(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Positive(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Equal(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator NotEqual(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator GreaterThan(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator GreaterThanOrEqual(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator LessThan(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator LessThanOrEqual(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(System.UInt64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(System.Int64)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(System.Double)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(DeHL.Math.BigCardinal.BigCardinal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(DeHL.Math.BigInteger.BigInteger)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Implicit(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Explicit(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.operator Explicit(System.Variant)" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.VarType" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.GetType()" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Zero" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.One" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.MinusOne" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.Ten" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.MinusTen" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.IData" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.BigDecimal.TData" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.FBigIntegerType" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.DoSerialize(DeHL.Serialization.TValueInfo,DeHL.Math.BigDecimal.BigDecimal,DeHL.Serialization.ISerializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.DoDeserialize(DeHL.Serialization.TValueInfo,out@DeHL.Math.BigDecimal.BigDecimal,DeHL.Serialization.IDeserializationContext)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.Compare(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.GenerateHashCode(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.GetString(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.Family()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.TryConvertToVariant(DeHL.Math.BigDecimal.BigDecimal,out@System.Variant)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalType.TryConvertFromVariant(System.Variant,out@DeHL.Math.BigDecimal.BigDecimal)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Add(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Subtract(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Multiply(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Divide(DeHL.Math.BigDecimal.BigDecimal,DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Negate(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Abs(DeHL.Math.BigDecimal.BigDecimal)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.Zero()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.One()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalMathExtension.MinusOne()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData.VType" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData.Reserved1" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData.Reserved2" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData.Reserved3" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData.BigDecimalRef" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVarData.Reserved4" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.VarDataToBigDecimal(System.TVarData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.BigDecimalToVarData(DeHL.Math.BigDecimal.BigDecimal,ref@System.TVarData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.Clear(ref@System.TVarData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.Copy(ref@System.TVarData,System.TVarData,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.Cast(ref@System.TVarData,System.TVarData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.CastTo(ref@System.TVarData,System.TVarData,System.Word)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.BinaryOp(ref@System.TVarData,System.TVarData,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.UnaryOp(ref@System.TVarData,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.Compare(System.TVarData,System.TVarData,ref@Variants.TVarCompareResult)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Math.BigDecimal.TBigDecimalVariantType.IsClear(System.TVarData)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Math.BigDecimal.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Math.BigDecimal.@unitclass.SgtBigDecimalVariantType" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Math.BigDecimal.@unitclass.SgtBigDecimalVariantType" />
    </reference>
  </view>
</nodeSet>