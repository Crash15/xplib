<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="0r4mbhggyzq_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.TLogMessageType">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogMessageType.lmtError" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogMessageType.lmtInformation" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogMessageType.lmtWarning" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogMessageType.lmtDebug" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.TErrorLogMode">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TErrorLogMode.elmFormatted" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TErrorLogMode.elmUnFormatted" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.IFormatter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.IFormatter.FormatLogMsg(System.string,AppLog.TLogMessageType)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.TLogFormatter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:XPLibD14:AppLog.TLogFormatter:AppLog.IFormatter" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFormatter.FormatLogMsg(System.string,AppLog.TLogMessageType)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.TLogSingleLineFormatter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:XPLibD14:AppLog.TLogSingleLineFormatter:AppLog.TLogFormatter" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogSingleLineFormatter.FormatLogMsg(System.string,AppLog.TLogMessageType)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.TLogFile">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:XPLibD14:AppLog.TLogFile.Formatter" />
      <reference referencedUin="delphi:l_ast:src:XPLibD14:AppLog.TLogFile.FFormatter" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogFile.FFileName" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogFile.FFormatter" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogFile.FLocked" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogFile.FOpenMode" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.GetBuffered()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.SetBuffered(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.GetBufferText()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.SetFileName(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.GetSize()" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogFile.FLogBuffer" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.TLogFile.FStream" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.StreamDispose()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.StreamNeeded()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.WriteTo(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.Create(System.string,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.Destroy()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.Commit()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.CopyToStream(System.Int64,System.Int64,Classes.TStream)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.Discard()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.GetDefaultLogFile()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.Initialize()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.Log(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.SetDefaultLogFile(AppLog.TLogFile)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.TLogFile.WriteLog(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.Buffered" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.BufferText" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.FileName" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.Formatter" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.Locked" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.OpenMode" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:AppLog.TLogFile.Size" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.ELoggedException">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.WriteLog(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.FormatLogMessage(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.Create(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateFmt(System.string,System.TVarRec[])" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateFmtHelp(System.string,System.TVarRec[],System.Integer)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateHelp(System.string,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateRes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateRes(System.TResStringRec*)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateResFmt(System.Integer,System.TVarRec[])" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateResFmt(System.TResStringRec*,System.TVarRec[])" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateResFmtHelp(System.Integer,System.TVarRec[],System.Integer)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateResFmtHelp(System.TResStringRec*,System.TVarRec[],System.Integer)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateResHelp(System.Integer,System.Integer)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.ELoggedException.CreateResHelp(System.TResStringRec*,System.Integer)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_ast:src:XPLibD14:AppLog.@unitclass.GlobalDefaultLogFile" />
      <reference referencedUin="delphi:l_ast:src:XPLibD14:AppLog.@unitclass.ErrorLogMode" />
      <reference referencedUin="delphi:l_ast:src:XPLibD14:AppLog.@unitclass.FormatMessageProc" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.AppFatalError(System.string,System.Integer,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.CloseErrorLogBuffer()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.FormatErrorLogMsg(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.FlushErrorLogBuffer()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.OpenErrorLogBuffer()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.RaiseWin32Error(System.Cardinal)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.ReadErrorLogBuffer(Classes.TStringList)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.WriteErrorLogMsg(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.WriteErrorLogMsgFmt(System.string,System.TVarRec[])" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.WriteLogMsg(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.FormatLogMsg(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.SetLogFileName(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.WriteSingleLineLogMsg(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.FormatSimpleLineLogMsg(System.string,AppLog.TLogMessageType)" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.ErrorLogMode" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.FormatMessageProc" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.LogUserName" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.LogBuffered" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.DEFAULT_APP_LOG_EXTENSION" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.GlobalLogFileName" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.LogBuffer" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.LogCriticalSection" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:AppLog.@unitclass.GlobalDefaultLogFile" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:AppLog.@unitclass.GetWindowsUserName()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:AppLog.TFormatMessageProc">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>