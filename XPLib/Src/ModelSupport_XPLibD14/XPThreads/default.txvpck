<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="0nikbid810m_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.TThreadNameInfo">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TThreadNameInfo.FType" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TThreadNameInfo.FName" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TThreadNameInfo.FThreadID" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TThreadNameInfo.FFlags" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.TThreadHnd">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TThreadHnd.GlobalLibLock()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TThreadHnd.GlobalLibUnlock()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TThreadHnd.AllocCurrentThreadHandle()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.TXPBaseThread">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TXPBaseThread.FMaxTerminateTime" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TXPBaseThread.FIsAlive" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPBaseThread.DoTerminate()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPBaseThread.Terminate()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPBaseThread.Resume()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPBaseThread.WaitFor(System.Cardinal)" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:XPThreads.TXPBaseThread.MaxTerminateTime" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:XPThreads.TXPBaseThread.IsAlive" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.TXPNamedThread">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:XPLibD14:XPThreads.TXPNamedThread:XPThreads.TXPBaseThread" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TXPNamedThread.FName" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.TXPNamedThread.FNameInitialized" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThread.Initialize()" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThread.SetName(System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThread.Create(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThread.Create(System.Boolean,System.string)" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThread.Execute()" />
      <reference referencedUin="delphi:e_property:src:XPLibD14:XPThreads.TXPNamedThread.Name" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThread.SetCurrentThreadName(System.string)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.TXPNamedThreadSample">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:XPLibD14:XPThreads.TXPNamedThreadSample:XPThreads.TXPNamedThread" />
      <reference referencedUin="delphi:e_method:src:XPLibD14:XPThreads.TXPNamedThreadSample.Execute()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:XPLibD14:XPThreads.@unitclass.GlobalLockInstance" />
    </reference>
    <reference referencedUin="delphi:e_class:src:XPLibD14:XPThreads.EXPThread">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>