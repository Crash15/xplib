<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="sx0s6wkeshs_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Conversion.IConverter&lt;2&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.IConverter&lt;2&gt;.TryConvert(T1,out@T2)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.IConverter&lt;2&gt;.Convert(T1)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Conversion.TConverter">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Conversion.TConverter.FMapping" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.Create()static" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.Destroy()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.GetConverter(TypInfo.TTypeInfo*,TypInfo.TTypeInfo*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.SetConverter(TypInfo.TTypeInfo*,TypInfo.TTypeInfo*,System.IInterface)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterByte()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterShortInt()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterWord()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterSmallInt()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterLongWord()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterLongInt()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterUInt64()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterInt64()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterSingle()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterDouble()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterExtended()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterComp()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterCurrency()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterAnsiChar()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterWideChar()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterShortString()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterAnsiString()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterWideString()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterUnicodeString()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterBoolean()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterByteBool()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterWordBool()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterLongBool()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterPointer()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterUCS4Char()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterUCS4String()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterInterface()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterMetaclass()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterClass()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterDate()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterTime()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter.RegisterDateTime()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_impl:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;:DeHL.Conversion.IConverter&lt;TIn,TOut&gt;" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.Method" />
      <reference referencedUin="delphi:l_ast:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.FConvertProc" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.FConvertProc" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.FInType" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.FOutType" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.TryMapTypeToStandard(TypInfo.TTypeInfo*,out@TypInfo.TTypeInfo*)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.SelectConverterProc()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.GetConverter()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.SetConverter(DeHL.Conversion.TConvertProc&lt;2&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.AsIntf()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.Create(DeHL.Types.IType&lt;TIn&gt;,DeHL.Types.IType&lt;TOut&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.Convert(TIn)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.TryConvert(TIn,out@TOut)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.Clone()" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Conversion.TConverter&lt;2&gt;.Method" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Conversion.@unitclass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Conversion.TConvertProc&lt;2&gt;">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>