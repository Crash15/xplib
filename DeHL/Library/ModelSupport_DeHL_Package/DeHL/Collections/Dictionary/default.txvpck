<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="eyfr68lw53n_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FBucketArray" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FEntryArray" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FCount" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FFreeCount" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FFreeList" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FVer" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.InitializeInternals(System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Insert(TKey,TValue,System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FindEntry(TKey)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Resize()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Hash(TKey)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.StartSerializing(DeHL.Serialization.TSerializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.StartDeserializing(DeHL.Serialization.TDeserializationData)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.DeserializePair(TKey,TValue)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.GetCount()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.GetItem(TKey)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.SetItem(TKey,TValue)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Base.IEnumerable`1)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Tuples.KVPair&lt;2&gt;[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TCollection`1.TDynamicArray`1)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TCollection`1.TDynamicArray`1.TFixedArray`1)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Base.IEnumerable`1)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Tuples.KVPair&lt;2&gt;[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TCollection`1.TDynamicArray`1)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Create(DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TEnexCollection`1.IEnexCollection`1.TEnexExtOps`1.FType,DeHL.Collections.Base.TCollection`1.TDynamicArray`1.TFixedArray`1)" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FKeyCollection" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.FValueCollection" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Destroy()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Clear()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Add(DeHL.Tuples.KVPair&lt;2&gt;)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Add(TKey,TValue)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Remove(TKey)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.ContainsKey(TKey)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.ContainsValue(TValue)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TryGetValue(TKey,out@TValue)" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Items[TKey]" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Count" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Keys" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.Values" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.GetEnumerator()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.CopyTo(ref@DeHL.Tuples.KVPair&lt;2&gt;[])" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.CopyTo(ref@DeHL.Tuples.KVPair&lt;2&gt;[],System.NativeUInt)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.ValueForKey(TKey)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.KeyHasValue(TKey,TValue)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.SelectKeys()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.SelectValues()" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TPairEnumerator" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TKeyEnumerator" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TValueEnumerator" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TEntry" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TKeyCollection" />
      <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;.TValueCollection" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:l_gnt:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;:DeHL.Collections.Dictionary.TDictionary&lt;2&gt;" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.FKeyWrapperType" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.FValueWrapperType" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.GetOwnsKeys()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.SetOwnsKeys(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.GetOwnsValues()" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.SetOwnsValues(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.InstallTypes(DeHL.Types.TType`1.IType`1,DeHL.Types.TType`1.IType`1)" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.OwnsKeys" />
      <reference referencedUin="delphi:e_property:src:DeHL_Package:DeHL.Collections.Dictionary.TObjectDictionary&lt;2&gt;.OwnsValues" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.@unitclass">
      <property name="$shortcutReference" value="true" />
      <reference referencedUin="delphi:e_field:src:DeHL_Package:DeHL.Collections.Dictionary.@unitclass.DefaultArrayLength" />
    </reference>
    <reference referencedUin="delphi:e_class:src:DeHL_Package:DeHL.Collections.Dictionary.TBugReproducer">
      <property name="$shortcutReference" value="true" />
    </reference>
  </view>
</nodeSet>